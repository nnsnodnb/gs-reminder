name: Test

on: [pull_request]

jobs:
  github-apps:
    runs-on: ubuntu-latest

    outputs:
      access_token: ${{ steps.token-encode.outputs.out }}

    steps:
    - uses: actions/checkout@v4

    - uses: Cyberbeni/install-swift-tool@v2
      with:
        url: https://github.com/nnsnodnb/github-apps-token-swift
        version: '*'

    - name: Configure access token for GitHub Apps
      id: get-github-apps
      env:
        APP_ID: ${{ secrets.APP_ID }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      run: |
        echo "${PRIVATE_KEY}" > /tmp/github-apps-private-key.pem
        token=$(github-apps-token create \
                  -a "${APP_ID}" \
                  -p /tmp/github-apps-private-key.pem \
                  --owner nnsnodnb \
                  -r gs-reminder \
                  --pull_requests read)
        echo "token=${token}" >> "${GITHUB_OUTPUT}"
        rm /tmp/github-apps-private-key.pem

    - uses: cloudposse/github-action-secret-outputs@main
      id: token-encode
      with:
        secret: ${{ secrets.SECRET_PASSPHRASE }}
        op: encode
        in: ${{ steps.get-github-apps.outputs.token }}

  notify:
    runs-on: ubuntu-latest
    needs: github-apps

    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install -U pip
        pip install -r .github/requirements.txt
        poetry config virtualenvs.in-project true
        poetry install --sync --without=dev

    - uses: cloudposse/github-action-secret-outputs@main
      id: token-decode
      with:
        secret: ${{ secrets.SECRET_PASSPHRASE }}
        op: decode
        in: ${{ needs.github-apps.outputs.access_token }}

    - name: Send Test
      env:
        GITHUB_TOKEN: ${{ steps.token-decode.outputs.out }}
        SLACK_URL: ${{ secrets.SLACK_URL }}
        REPOSITORY: ${{ github.repository }}
      run: |
        poetry run python -m gs_reminder -r "${REPOSITORY}" -u ./examples/username.json

  revoke:
    runs-on: ubuntu-latest
    needs:
    - github-apps
    - notify
    if: always()

    steps:
    - uses: cloudposse/github-action-secret-outputs@main
      id: token-decode
      with:
        secret: ${{ secrets.SECRET_PASSPHRASE }}
        op: decode
        in: ${{ needs.github-apps.outputs.access_token }}

    - name: Revoke access token for GitHub Apps
      env:
        GITHUB_TOKEN: ${{ steps.token-decode.outputs.out }}
      run: |
        if [[ -n "${GITHUB_TOKEN}" ]]; then
          curl -L \
            -X DELETE \
            --fail-with-body \
            "https://api.github.com/installation/token" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28"
          echo "Revoked token"
        fi
